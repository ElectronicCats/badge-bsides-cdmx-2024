#ifndef CTF_BLE_H
#define CTF_BLE_H

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

/* Attributes State Machine */
enum {
  IDX_SVC,

  IDX_CHAR_SCORE,
  IDX_CHAR_VAL_SCORE,

  IDX_CHAR_FLAG,
  IDX_CHAR_VAL_FLAG,

  IDX_CHAR_FLAG_SIMPLE_READ,
  IDX_CHAR_VAL_FLAG_SIMPLE_READ,

  IDX_CHAR_FLAG_MD5,
  IDX_CHAR_VAL_FLAG_MD5,

  IDX_CHAR_FLAG_WRITE_ANYTHING,
  IDX_CHAR_VAL_FLAG_WRITE_ANYTHING,

  IDX_CHAR_FLAG_WRITE_ASCII,
  IDX_CHAR_VAL_FLAG_WRITE_ASCII,

  IDX_CHAR_FLAG_WRITE_HEX,
  IDX_CHAR_VAL_FLAG_WRITE_HEX,

  IDX_CHAR_FLAG_SIMPLE_WRITE2_READ,
  IDX_CHAR_VAL_FLAG_SIMPLE_WRITE2_READ,

  IDX_CHAR_FLAG_SIMPLE_WRITE2,
  IDX_CHAR_VAL_FLAG_SIMPLE_WRITE2,

  IDX_CHAR_FLAG_BRUTE_WRITE,
  IDX_CHAR_VAL_FLAG_BRUTE_WRITE,

  IDX_CHAR_FLAG_READ_ALOT,
  IDX_CHAR_VAL_FLAG_READ_ALOT,

  IDX_CHAR_FLAG_NOTIFICATION,
  IDX_CHAR_VAL_FLAG_NOTIFICATION,
  IDX_CHAR_CFG_FLAG_NOTIFICATION,

  IDX_CHAR_FLAG_INDICATE_READ,
  IDX_CHAR_VAL_FLAG_INDICATE_READ,

  IDX_CHAR_FLAG_INDICATE,
  IDX_CHAR_VAL_FLAG_INDICATE,
  IDX_CHAR_CFG_FLAG_INDICATE,

  IDX_CHAR_FLAG_NOTIFICATION_MULTI,
  IDX_CHAR_VAL_FLAG_NOTIFICATION_MULTI,
  IDX_CHAR_CFG_FLAG_NOTIFICATION_MULTI,

  IDX_CHAR_FLAG_INDICATE_MULTI_READ,
  IDX_CHAR_VAL_FLAG_INDICATE_MULTI_READ,

  IDX_CHAR_FLAG_INDICATE_MULTI,
  IDX_CHAR_VAL_FLAG_INDICATE_MULTI,
  IDX_CHAR_CFG_FLAG_INDICATE_MULTI,

  IDX_CHAR_FLAG_MAC,
  IDX_CHAR_VAL_FLAG_MAC,

  IDX_CHAR_FLAG_MTU,
  IDX_CHAR_VAL_FLAG_MTU,

  IDX_CHAR_FLAG_WRITE_RESPONSE,
  IDX_CHAR_VAL_FLAG_WRITE_RESPONSE,

  IDX_CHAR_FLAG_HIDDEN_NOTIFY,
  IDX_CHAR_VAL_FLAG_HIDDEN_NOTIFY,

  IDX_CHAR_FLAG_CRAZY,
  IDX_CHAR_VAL_FLAG_CRAZY,

  IDX_CHAR_FLAG_TWITTER,
  IDX_CHAR_VAL_FLAG_TWITTER,

  HRS_IDX_NB,
};

/**
 * @brief Callback to handle the bluetooth ctf
 *
 * @param record The tracker profile record
 */
typedef void (*ctf_ble_flag_cb_t)(int score, char* flags);

/**
 * @brief Register the callback to handle the bluetooth ctf
 *
 * @param callback The callback to handle the bluetooth ctf
 */
void ctf_ble_flag_register_cb(ctf_ble_flag_cb_t callback);

void ctf_ble_module_begin(void);

#endif  // CTF_BLE_H
